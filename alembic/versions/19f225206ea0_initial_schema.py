"""initial schema

Revision ID: 19f225206ea0
Revises: 
Create Date: 2023-08-19 23:12:22.544062

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19f225206ea0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dim_customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('is_repeat_customer', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dim_discount_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.CheckConstraint("name IN ('Repeat Customer', 'Senior Citizen', 'N/A', 'EndofYear', 'First Time Driver')", name='valid_discount_type'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dim_vehicle_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('make', sa.String(length=20), nullable=True),
    sa.Column('model', sa.String(length=20), nullable=True),
    sa.Column('trim', sa.String(length=100), nullable=True),
    sa.Column('wheel_drive_type', sa.String(length=20), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('drive_train_type', sa.String(length=20), nullable=True),
    sa.Column('msrp_amount', sa.DECIMAL(), nullable=True, comment='Manufacturer suggest retail price amount. List Price.'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dim_vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('vin', sa.String(length=100), nullable=True),
    sa.Column('dim_vehicle_model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dim_vehicle_model_id'], ['dim_vehicle_model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fact_customer_relations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('dim_customer_id', sa.Integer(), nullable=True),
    sa.Column('encounter_date', sa.DATE(), nullable=True, comment='Date of customer encounter.'),
    sa.Column('encounter_notes', sa.TEXT(), nullable=True, comment='Notes for a given encounter with a customer. A customer may have multiple encounters.'),
    sa.ForeignKeyConstraint(['dim_customer_id'], ['dim_customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fact_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('dim_vehicle_id', sa.Integer(), nullable=True),
    sa.Column('is_in_stock', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['dim_vehicle_id'], ['dim_vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fact_sale_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.Column('dim_customer_id', sa.Integer(), nullable=True),
    sa.Column('dim_vehicle_id', sa.Integer(), nullable=True),
    sa.Column('dim_discount_type_id', sa.Integer(), nullable=True),
    sa.Column('sale_date', sa.DATE(), nullable=True),
    sa.Column('purchase_price_amount', sa.DECIMAL(), nullable=True),
    sa.Column('is_trade_in', sa.BOOLEAN(), nullable=True),
    sa.Column('trade_in_value_amount', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['dim_customer_id'], ['dim_customer.id'], ),
    sa.ForeignKeyConstraint(['dim_discount_type_id'], ['dim_discount_type.id'], ),
    sa.ForeignKeyConstraint(['dim_vehicle_id'], ['dim_vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fact_sale_transactions')
    op.drop_table('fact_inventory')
    op.drop_table('fact_customer_relations')
    op.drop_table('dim_vehicle')
    op.drop_table('dim_vehicle_model')
    op.drop_table('dim_discount_type')
    op.drop_table('dim_customer')
    # ### end Alembic commands ###
